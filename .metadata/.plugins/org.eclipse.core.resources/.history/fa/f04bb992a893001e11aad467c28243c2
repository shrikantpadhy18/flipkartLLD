/**
 * 
 */
package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Formatters.Response;
import com.example.demo.model.Client;
import com.example.demo.service.ClientService;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
/**
 * @author SHRIKANT
 *
 */
@RestController
public class UserRegisterController {
	@Autowired
	private ClientService clientService;
	
	@PostMapping(value = "/User/Register",produces = "application/json",consumes = "application/json")
	public ResponseEntity<Response> addUserDetails(@RequestBody Client user) {
		Client clientdata = clientService.saveToClientStore(user);
		
		
		
		try {
			if(clientdata!= null) {
				String successMessage = "Client successfully added";
				Response success = new Response(HttpStatus.OK.value(), successMessage);
	            return new ResponseEntity<>(success, HttpStatus.OK);
			}
			else
			{
				String errorMessage = "Failed to add client because its a duplicate entry";
				Response failure = new Response(HttpStatus.INTERNAL_SERVER_ERROR.value(), errorMessage);
	            return new ResponseEntity<>(failure, HttpStatus.INTERNAL_SERVER_ERROR);
			}

        } catch (Exception e) {
            // If there is an error adding the client, return an error response
        	String errorMessage = "Failed to add client";
			Response failure = new Response(HttpStatus.INTERNAL_SERVER_ERROR.value(), errorMessage);
            return new ResponseEntity<>(failure, HttpStatus.INTERNAL_SERVER_ERROR);
        }
		
	}
	
}
